{
	"info": {
		"_postman_id": "2e8e0772-570b-44b2-b153-01f1c5c9949a",
		"name": "Trello Rest APIs Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22795877"
	},
	"item": [
		{
			"name": "1-Create a Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"The closed parameter should be false\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(false); // Check closed=false\r",
							"});\r",
							"pm.test(\"The permissionLevel should be private\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"permissionLevel\");\r",
							"});\r",
							"pm.test(\"can be public is true\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.prefs.canBePublic).to.eql(true); // Check closed=false\r",
							"});\r",
							"\r",
							"pm.test(\"can invite is true\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.prefs.canInvite).to.eql(true); // Check closed=false\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"Norhane\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.trello.com/1/boards/?name=TrelloRestAPIs&key={{Key}}&token={{Token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "TrelloRestAPIs"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "2-idBoards Numbers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.get(\"variable_key\");\r",
							"pm.test(\"Status Code Should be equal to 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"var boardsL = jsonData.boards.length;\r",
							"\r",
							"pm.test(\"Number of boards should be more than 1\", function () {\r",
							"    pm.expect(boardsL).to.be.above(1);\r",
							"});\r",
							"pm.globals.set(\"FirstBoardID\", jsonData.boards[0].id);\r",
							"pm.globals.set(\"LastBoardID\", jsonData.boards[boardsL-1].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/members/me?boards=open&key={{Key}}&token={{Token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"members",
						"me"
					],
					"query": [
						{
							"key": "boards",
							"value": "open"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "3-create a list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"ID key\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"id\");\r",
							"});\r",
							"pm.test(\"name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"name\");\r",
							"});\r",
							"pm.test(\"idBoard\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"idBoard\");\r",
							"});\r",
							"pm.test(\"closed parameter\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"});\r",
							"pm.test(\" limits are empty object\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.limits).to.be.empty;\r",
							"\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.trello.com/1/lists?name=new added List&idBoard={{FirstBoardID}}&key={{Key}}&token={{Token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "new added List"
						},
						{
							"key": "idBoard",
							"value": "{{FirstBoardID}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "4-Lists on the Boards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"var listL = jsonData.length;\r",
							"pm.test(\"Number of list is egiht lists\", function () {\r",
							"    pm.expect(jsonData.length).to.eql(8);\r",
							"});\r",
							"pm.environment.set(\"FirstListID\", jsonData[0].id);\r",
							"pm.environment.set(\"LastListID\", jsonData[listL-1].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/{{FirstBoardID}}/lists?key={{Key}}&token={{Token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"{{FirstBoardID}}",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "5-Archive or unarchive list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"the value of closed is true\", function () {\r",
							"    pm.expect(jsonData.closed).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"Set-cookie at the header's response \", function () {\r",
							"    var cookies_header = pm.response.headers.get(\"Set-Cookie\");\r",
							"\r",
							"\r",
							"    pm.expect(cookies_header).contains(\"isEnterpriseAdmin%3Dfalse\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists/{{ListID}}/closed?key={{Key}}&token={{Token}}&value=true",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists",
						"{{ListID}}",
						"closed"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "value",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "6-delete a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"console.log(pm.response.json());\r",
							"pm.globals.unset(\"LastBoardID\");\r",
							"pm.test(\"Board is deleted successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"pm.expect(jsonData._value).to.eql(null); \r",
							" \r",
							"});\r",
							"console.log(pm.response.text());\r",
							"var TextData = pm.response.text();\r",
							"pm.test(\"Check response body include board is 'removed successfully'\", function () {\r",
							"    pm.expect(TextData).to.include(\"board is removed successfully\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.trello.com/1/boards/{{LastBoardID}}?key={{Key}}&token={{Token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"{{LastBoardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "bbd8cc6c386b3658ee8baf8c12d792a98157a9823046acb32f14bed01697985f",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Key",
			"value": "b4f1b19a80d51dc12966771e7df7d35d"
		},
		{
			"key": "Token",
			"value": "bbd8cc6c386b3658ee8baf8c12d792a98157a9823046acb32f14bed01697985f"
		},
		{
			"key": "id",
			"value": "625efe6e8355262f50712173"
		},
		{
			"key": "Name",
			"value": "Norhane Mahrouss"
		},
		{
			"key": "idBoardNum",
			"value": "62f5b03391c7650020ca7d57"
		},
		{
			"key": "FirstListID",
			"value": "62f6c3a84120c300db4a5595"
		}
	]
}